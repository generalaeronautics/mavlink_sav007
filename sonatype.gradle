apply plugin: 'maven-publish'
apply plugin: 'signing'

version = rootProject.version

def envOrProperty = { envKey, propKey, defaultValue ->
    System.getenv(envKey) ?:
            project.hasProperty(propKey) ?
                    project.getProperty(propKey) : defaultValue
}

def ossrhUsername = envOrProperty('OSSRH_USERNAME', 'ossrhUsername', '')
def ossrhPassword = envOrProperty('OSSRH_PASSWORD', 'ossrhPassword', '')

ext."signing.keyId" = envOrProperty('SIGNING_KEYID', 'signing.keyId', '')
ext."signing.password" = envOrProperty('SIGNING_PASSWORD', 'signing.password', '')
ext."signing.secretKeyRingFile" = envOrProperty('SIGNING_SECRETKEYRINGFILE', 'signing.secretKeyRingFile', rootProject.file("secring.gpg").absolutePath)

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = project.name
                packaging = 'jar'
                description = 'A library for communication using the Mavlink1 and Mavlink2 protocols'
                url = 'http://dronefleet.io'

                scm {
                    connection = 'scm:git:git://github.com/dronefleet/mavlink.git'
                    developerConnection = 'scm:git:ssh://github.com:dronefleet/mavlink.git'
                    url = 'http://github.com/dronefleet/mavlink/tree/master'
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'benbarkay'
                        name = 'Ben Barkay'
                        email = 'ben@dronefleet.io'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
            if (project.version.endsWith('-SNAPSHOT')) {
                url = "https://oss.sonatype.org/content/repositories/snapshots/"
            } else {
                url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
        }
    }
}